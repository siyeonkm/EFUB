<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <!-- scan 범위 설정, 컨테이너 관련 설명, 파일 지정해서 설정할 수 있다는 장점 -->
    <context:component-scan base-package="com.springbook.common, com.springbook.dao, com.springbook.domain, com.springbook.service" />

    <!-- aop를 annotation으로 설정하기 위해서 선언 -->
    <aop:aspectj-autoproxy/>

    <!-- DataSource 설정 -->
    <context:property-placeholder location="classpath:config/database.properties" />

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!-- Spring JDBC 설정 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- Transaction 설정 -->
    <!-- 스프링의 트랜잭션 설정은 어노테이션으로 불가능하고 xml 기반의 aop 설정으로 사용할 수 있음. -->
    <!-- 1. 트랜잭션 관리자 등록 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 2. 트랜잭션 어드바이스 설정 -->
    <!-- get 으로 시작하는 모든 메소드는 읽기 전용으로 처리되어 트랜잭션 관리 대상에서 제외되고
    나머지 메소드들은 트랜잭션 관리에 포함된다는 뜻 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <!-- 3. 비즈니스 메소드 실행 후에 트랜잭션 관리 어드바이스가 동작하도록 aop 설정 추가 -->
    <aop:config>
        <!-- com.springbook.service로 시작하는 모든 패키지 선택, Impl로 끝나는 클래스 중 모든 메소드 선택 -->
        <aop:pointcut id="txPointcut"  expression="execution(* com.springbook.service..*Impl.*(..))"/>
        <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
    </aop:config>

</beans>
